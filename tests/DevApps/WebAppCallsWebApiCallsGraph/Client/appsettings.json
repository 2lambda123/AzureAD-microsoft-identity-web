{
    "AzureAd": {
        "Instance": "https://login.microsoftonline.com/",
        "Domain": "msidentitysamplestesting.onmicrosoft.com",
        "TenantId": "7f58f645-c190-4ce5-9de4-e2b7acd2a6ab",
        "ClientId": "86699d80-dd21-476a-bcd1-7c1a3d471f75",
        "CallbackPath": "/signin-oidc",
        "SignedOutCallbackPath ": "/signout-callback-oidc",
        "EnablePiiLogging": true,
        "EnableCacheSynchronization": false,
        "UserAssignedManagedIdentityClientId": "a4acf71f-3855-4675-87cc-4bda64ac1a48",

        // To call an API
        "ClientCertificates": [
            {
                "SourceType": "KeyVault",
                "KeyVaultUrl": "https://webappsapistests.vault.azure.net",
                "KeyVaultCertificateName": "Self-Signed-5-5-22",
                "ManagedIdentityClientId": "a4acf71f-3855-4675-87cc-4bda64ac1a48"
            }
        ]
    },
    "TodoList": {
        // TodoListScope is the scope of the Web API you want to call.
        "Scopes": [ "api://a4c2469b-cf84-4145-8f5f-cb7bacf814bc/access_as_user" ],
        "BaseUrl": "https://localhost:44351"

    },
    "SayHello": {
        // Scope for the web API set up w/gRPC
        "Scopes": [ "api://a4c2469b-cf84-4145-8f5f-cb7bacf814bc/access_as_user" ],
        "BaseUrl": "https://localhost:5001"
    },
    "AzureFunction": {
        // Scope for the web API set up Azure function
        "Scopes": [ "api://a4c2469b-cf84-4145-8f5f-cb7bacf814bc/access_as_user" ],
        "BaseUrl": "http://localhost:7071/api/SampleFunc"
    },
    "TodoListJwe": {
        // Scope for the web API used with the token decryption certificates.
        "Scopes": [ "api://a4c2469b-cf84-4145-8f5f-cb7bacf814bc/access_as_user" ],
        "BaseUrl": "https://localhost:44351"
    },
    "Logging": {
        "LogLevel": {
            "Default": "Error",
            "Microsoft": "Warning",
            "Microsoft.Hosting.Lifetime": "Information",
            "Microsoft.Identity.Web": "Debug"
        }
    },
    "AllowedHosts": "*",
    //"Urls": "https://localhost:44321",
    "ConnectionStrings": {
        "Redis": "localhost:5002" // configure w/docker
    }
}
